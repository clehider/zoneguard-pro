{"ast":null,"code":"import React,{useState,useEffect}from'react';import MapComponent from'./components/MapComponent';import IncidentForm from'./components/IncidentForm';import GoogleAuth from'./components/GoogleAuth';import{sheetsService}from'./services/sheetsService';// Remove the './App.css' import since we're using Tailwind CSS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isAuthenticated,setIsAuthenticated]=useState(false);const[incidents,setIncidents]=useState([]);// Estado para almacenar incidentes si los lees\n// Callback para cuando la autenticación es exitosa\nconst handleAuthSuccess=accessToken=>{console.log('App: Autenticación exitosa.');// Inicializar el servicio de Sheets con el token\nconst initialized=sheetsService.init(accessToken);if(initialized){setIsAuthenticated(true);// Opcional: Cargar datos iniciales si es necesario\n// loadInitialData();\n}else{console.error(\"App: No se pudo inicializar SheetsService.\");// Manejar el error, quizás mostrar un mensaje al usuario\n}};// Callback para cuando la autenticación falla\nconst handleAuthFailure=error=>{console.error('App: Falló la autenticación.',error);setIsAuthenticated(false);// Limpiar cualquier estado relacionado con el usuario autenticado\n};// Función para guardar datos (ahora usa sheetsService)\nconst handleSaveIncident=async incidentData=>{var _incidentData$locatio,_incidentData$locatio2;if(!isAuthenticated||!sheetsService.isInitialized()){alert('Por favor, inicia sesión con Google primero.');return;}const values=[new Date().toLocaleString(),// Fecha y hora\nincidentData.type||'',// Tipo de incidente\nincidentData.description||'',// Descripción\n((_incidentData$locatio=incidentData.location)===null||_incidentData$locatio===void 0?void 0:_incidentData$locatio.lat)||'',// Latitud\n((_incidentData$locatio2=incidentData.location)===null||_incidentData$locatio2===void 0?void 0:_incidentData$locatio2.lng)||'',// Longitud\nincidentData.status||'Pendiente',// Estado del incidente\nincidentData.assignedTo||''// Asignado a\n// Añade más campos según necesites\n];try{const result=await sheetsService.addRecord('Incidentes',values);console.log('Incidente guardado:',result);alert('Incidente registrado con éxito');// Actualizar la lista de incidentes si es necesario\n// await loadIncidents();\n}catch(error){console.error('Error al guardar:',error);alert(`Error al guardar el incidente: ${error.message}`);}};// Opcional: Función para cargar datos iniciales\n// async function loadInitialData() {\n//   if (sheetsService.isInitialized()) {\n//     const data = await sheetsService.getRecords('Incidentes'); // Asume hoja 'Incidentes'\n//     if (data) {\n//       // Procesa los datos y actualiza el estado 'incidents'\n//       console.log(\"Datos cargados:\", data);\n//       // setIncidents(processedData);\n//     }\n//   }\n// }\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App flex flex-col h-screen\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"bg-gray-800 text-white p-4 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold\",children:\"ZoneGuard Pro - Panel de Control\"}),/*#__PURE__*/_jsx(GoogleAuth,{onAuthSuccess:handleAuthSuccess,onAuthFailure:handleAuthFailure})]}),isAuthenticated?/*#__PURE__*/// Mostrar contenido principal solo si está autenticado\n_jsxs(\"main\",{className:\"flex flex-1 overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-1/2 h-full overflow-y-auto p-4 border-r border-gray-300\",children:/*#__PURE__*/_jsx(IncidentForm,{onSave:handleSaveIncident})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/2 h-full\",children:[/*#__PURE__*/_jsx(MapComponent,{incidents:incidents}),\" \"]})]}):/*#__PURE__*/// Mensaje para iniciar sesión\n_jsx(\"div\",{className:\"flex justify-center items-center flex-1\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-lg\",children:\"Por favor, inicia sesi\\xF3n con Google para continuar.\"})}),/*#__PURE__*/_jsx(\"footer\",{className:\"bg-gray-200 text-center p-2 text-sm\",children:\"\\xA9 2023 ZoneGuard Pro\"})]});}export default App;// DONE","map":{"version":3,"names":["React","useState","useEffect","MapComponent","IncidentForm","GoogleAuth","sheetsService","jsx","_jsx","jsxs","_jsxs","App","isAuthenticated","setIsAuthenticated","incidents","setIncidents","handleAuthSuccess","accessToken","console","log","initialized","init","error","handleAuthFailure","handleSaveIncident","incidentData","_incidentData$locatio","_incidentData$locatio2","isInitialized","alert","values","Date","toLocaleString","type","description","location","lat","lng","status","assignedTo","result","addRecord","message","className","children","onAuthSuccess","onAuthFailure","onSave"],"sources":["E:/TRABAJOS NUEVOS/RIALTO PATROL/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapComponent from './components/MapComponent';\nimport IncidentForm from './components/IncidentForm';\nimport GoogleAuth from './components/GoogleAuth';\nimport { sheetsService } from './services/sheetsService';\n// Remove the './App.css' import since we're using Tailwind CSS\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [incidents, setIncidents] = useState([]); // Estado para almacenar incidentes si los lees\n\n  // Callback para cuando la autenticación es exitosa\n  const handleAuthSuccess = (accessToken) => {\n    console.log('App: Autenticación exitosa.');\n    // Inicializar el servicio de Sheets con el token\n    const initialized = sheetsService.init(accessToken);\n    if (initialized) {\n      setIsAuthenticated(true);\n      // Opcional: Cargar datos iniciales si es necesario\n      // loadInitialData();\n    } else {\n      console.error(\"App: No se pudo inicializar SheetsService.\");\n      // Manejar el error, quizás mostrar un mensaje al usuario\n    }\n  };\n\n  // Callback para cuando la autenticación falla\n  const handleAuthFailure = (error) => {\n    console.error('App: Falló la autenticación.', error);\n    setIsAuthenticated(false);\n    // Limpiar cualquier estado relacionado con el usuario autenticado\n  };\n\n  // Función para guardar datos (ahora usa sheetsService)\n  const handleSaveIncident = async (incidentData) => {\n    if (!isAuthenticated || !sheetsService.isInitialized()) {\n      alert('Por favor, inicia sesión con Google primero.');\n      return;\n    }\n\n    const values = [\n      new Date().toLocaleString(), // Fecha y hora\n      incidentData.type || '',     // Tipo de incidente\n      incidentData.description || '', // Descripción\n      incidentData.location?.lat || '', // Latitud\n      incidentData.location?.lng || '', // Longitud\n      incidentData.status || 'Pendiente', // Estado del incidente\n      incidentData.assignedTo || '', // Asignado a\n      // Añade más campos según necesites\n    ];\n\n    try {\n      const result = await sheetsService.addRecord('Incidentes', values);\n      console.log('Incidente guardado:', result);\n      alert('Incidente registrado con éxito');\n      \n      // Actualizar la lista de incidentes si es necesario\n      // await loadIncidents();\n    } catch (error) {\n      console.error('Error al guardar:', error);\n      alert(`Error al guardar el incidente: ${error.message}`);\n    }\n  };\n\n  // Opcional: Función para cargar datos iniciales\n  // async function loadInitialData() {\n  //   if (sheetsService.isInitialized()) {\n  //     const data = await sheetsService.getRecords('Incidentes'); // Asume hoja 'Incidentes'\n  //     if (data) {\n  //       // Procesa los datos y actualiza el estado 'incidents'\n  //       console.log(\"Datos cargados:\", data);\n  //       // setIncidents(processedData);\n  //     }\n  //   }\n  // }\n\n  return (\n    <div className=\"App flex flex-col h-screen\">\n      <header className=\"bg-gray-800 text-white p-4 flex justify-between items-center\">\n        <h1 className=\"text-xl font-bold\">ZoneGuard Pro - Panel de Control</h1>\n        {/* Renderizar el componente de autenticación */}\n        <GoogleAuth\n          onAuthSuccess={handleAuthSuccess}\n          onAuthFailure={handleAuthFailure}\n        />\n      </header>\n\n      {isAuthenticated ? (\n        // Mostrar contenido principal solo si está autenticado\n        <main className=\"flex flex-1 overflow-hidden\">\n          <div className=\"w-1/2 h-full overflow-y-auto p-4 border-r border-gray-300\">\n            <IncidentForm onSave={handleSaveIncident} />\n            {/* Aquí podrías mostrar una lista de incidentes si los cargas */}\n          </div>\n          <div className=\"w-1/2 h-full\">\n            <MapComponent incidents={incidents} /> {/* Pasa los incidentes al mapa si los cargas */}\n          </div>\n        </main>\n      ) : (\n        // Mensaje para iniciar sesión\n        <div className=\"flex justify-center items-center flex-1\">\n          <p className=\"text-lg\">Por favor, inicia sesión con Google para continuar.</p>\n        </div>\n      )}\n\n      <footer className=\"bg-gray-200 text-center p-2 text-sm\">\n        © 2023 ZoneGuard Pro\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n\n// DONE"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,OAASC,aAAa,KAAQ,0BAA0B,CACxD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEhD;AACA,KAAM,CAAAe,iBAAiB,CAAIC,WAAW,EAAK,CACzCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC1C;AACA,KAAM,CAAAC,WAAW,CAAGd,aAAa,CAACe,IAAI,CAACJ,WAAW,CAAC,CACnD,GAAIG,WAAW,CAAE,CACfP,kBAAkB,CAAC,IAAI,CAAC,CACxB;AACA;AACF,CAAC,IAAM,CACLK,OAAO,CAACI,KAAK,CAAC,4CAA4C,CAAC,CAC3D;AACF,CACF,CAAC,CAED;AACA,KAAM,CAAAC,iBAAiB,CAAID,KAAK,EAAK,CACnCJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpDT,kBAAkB,CAAC,KAAK,CAAC,CACzB;AACF,CAAC,CAED;AACA,KAAM,CAAAW,kBAAkB,CAAG,KAAO,CAAAC,YAAY,EAAK,KAAAC,qBAAA,CAAAC,sBAAA,CACjD,GAAI,CAACf,eAAe,EAAI,CAACN,aAAa,CAACsB,aAAa,CAAC,CAAC,CAAE,CACtDC,KAAK,CAAC,8CAA8C,CAAC,CACrD,OACF,CAEA,KAAM,CAAAC,MAAM,CAAG,CACb,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,CAAE;AAC7BP,YAAY,CAACQ,IAAI,EAAI,EAAE,CAAM;AAC7BR,YAAY,CAACS,WAAW,EAAI,EAAE,CAAE;AAChC,EAAAR,qBAAA,CAAAD,YAAY,CAACU,QAAQ,UAAAT,qBAAA,iBAArBA,qBAAA,CAAuBU,GAAG,GAAI,EAAE,CAAE;AAClC,EAAAT,sBAAA,CAAAF,YAAY,CAACU,QAAQ,UAAAR,sBAAA,iBAArBA,sBAAA,CAAuBU,GAAG,GAAI,EAAE,CAAE;AAClCZ,YAAY,CAACa,MAAM,EAAI,WAAW,CAAE;AACpCb,YAAY,CAACc,UAAU,EAAI,EAAI;AAC/B;AAAA,CACD,CAED,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAlC,aAAa,CAACmC,SAAS,CAAC,YAAY,CAAEX,MAAM,CAAC,CAClEZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEqB,MAAM,CAAC,CAC1CX,KAAK,CAAC,gCAAgC,CAAC,CAEvC;AACA;AACF,CAAE,MAAOP,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzCO,KAAK,CAAC,kCAAkCP,KAAK,CAACoB,OAAO,EAAE,CAAC,CAC1D,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACEhC,KAAA,QAAKiC,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzClC,KAAA,WAAQiC,SAAS,CAAC,8DAA8D,CAAAC,QAAA,eAC9EpC,IAAA,OAAImC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,kCAAgC,CAAI,CAAC,cAEvEpC,IAAA,CAACH,UAAU,EACTwC,aAAa,CAAE7B,iBAAkB,CACjC8B,aAAa,CAAEvB,iBAAkB,CAClC,CAAC,EACI,CAAC,CAERX,eAAe,cACd;AACAF,KAAA,SAAMiC,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eAC3CpC,IAAA,QAAKmC,SAAS,CAAC,2DAA2D,CAAAC,QAAA,cACxEpC,IAAA,CAACJ,YAAY,EAAC2C,MAAM,CAAEvB,kBAAmB,CAAE,CAAC,CAEzC,CAAC,cACNd,KAAA,QAAKiC,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpC,IAAA,CAACL,YAAY,EAACW,SAAS,CAAEA,SAAU,CAAE,CAAC,IAAC,EACpC,CAAC,EACF,CAAC,cAEP;AACAN,IAAA,QAAKmC,SAAS,CAAC,yCAAyC,CAAAC,QAAA,cACtDpC,IAAA,MAAGmC,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,wDAAmD,CAAG,CAAC,CAC3E,CACN,cAEDpC,IAAA,WAAQmC,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CAAC,yBAExD,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA,cAAe,CAAAjC,GAAG,CAElB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}