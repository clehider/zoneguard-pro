{"ast":null,"code":"var _jsxFileName = \"E:\\\\TRABAJOS NUEVOS\\\\RIALTO PATROL\\\\project\\\\src\\\\components\\\\GoogleAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useGoogleLogin } from '@react-oauth/google';\n// import { sheetsService } from '../services/sheetsService'; // Importaremos y usaremos esto desde App.js\n\n// Asegúrate de que las SCOPES incluyan las necesarias para Google Sheets API\n// https://developers.google.com/sheets/api/guides/authorizing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SCOPES = 'https://www.googleapis.com/auth/spreadsheets';\nfunction GoogleAuth({\n  onAuthSuccess,\n  onAuthFailure\n}) {\n  _s();\n  // Recibe callbacks como props\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [error, setError] = useState(null);\n  const login = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      console.log('Login Success:', tokenResponse);\n      setIsLoggedIn(true);\n      setError(null);\n      // Pasar el token de acceso al componente padre (App.js)\n      // Este token se usará para inicializar el sheetsService\n      if (onAuthSuccess) {\n        onAuthSuccess(tokenResponse.access_token);\n      }\n      // Opcional: Podrías inicializar gapi aquí si necesitas más funcionalidades\n      // loadGapiClient(tokenResponse.access_token);\n    },\n    onError: errorResponse => {\n      console.error('Login Failed:', errorResponse);\n      setIsLoggedIn(false);\n      setError('Error al iniciar sesión con Google.');\n      if (onAuthFailure) {\n        onAuthFailure(errorResponse);\n      }\n    },\n    scope: SCOPES // Solicitar permisos para Google Sheets\n    // flow: 'implicit', // o 'auth-code' si necesitas un refresh token en backend\n  });\n\n  // Opcional: Función para cargar el cliente gapi si es necesario para Sheets API\n  // async function loadGapiClient(accessToken) {\n  //   await new Promise((resolve) => gapi.load('client', resolve));\n  //   gapi.client.setToken({ access_token: accessToken });\n  //   await gapi.client.load('https://sheets.googleapis.com/$discovery/rest?version=v4');\n  //   console.log('GAPI client loaded for Sheets');\n  //   // Ahora puedes inicializar tu sheetsService que usa gapi.client.sheets\n  //   // sheetsService.init(gapi.client); // Ejemplo\n  // }\n\n  // Podrías añadir una función de logout si es necesario\n  const handleLogout = () => {\n    // Aquí implementarías la lógica de logout si usas gapi o limpias el estado\n    setIsLoggedIn(false);\n    // Notificar al padre si es necesario\n    console.log('User logged out');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => login(),\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n      children: \"Iniciar Sesi\\xF3n con Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600\",\n        children: \"\\xA1Conectado con Google!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleAuth, \"GPe6dC8Q0sGy8yw1CO8vbnVlTsU=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = GoogleAuth;\nexport default GoogleAuth;\nvar _c;\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"names":["React","useState","useEffect","useGoogleLogin","jsxDEV","_jsxDEV","SCOPES","GoogleAuth","onAuthSuccess","onAuthFailure","_s","isLoggedIn","setIsLoggedIn","error","setError","login","onSuccess","tokenResponse","console","log","access_token","onError","errorResponse","scope","handleLogout","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/TRABAJOS NUEVOS/RIALTO PATROL/project/src/components/GoogleAuth.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useGoogleLogin } from '@react-oauth/google';\n// import { sheetsService } from '../services/sheetsService'; // Importaremos y usaremos esto desde App.js\n\n// Asegúrate de que las SCOPES incluyan las necesarias para Google Sheets API\n// https://developers.google.com/sheets/api/guides/authorizing\nconst SCOPES = 'https://www.googleapis.com/auth/spreadsheets';\n\nfunction GoogleAuth({ onAuthSuccess, onAuthFailure }) { // Recibe callbacks como props\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [error, setError] = useState(null);\n\n  const login = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      console.log('Login Success:', tokenResponse);\n      setIsLoggedIn(true);\n      setError(null);\n      // Pasar el token de acceso al componente padre (App.js)\n      // Este token se usará para inicializar el sheetsService\n      if (onAuthSuccess) {\n        onAuthSuccess(tokenResponse.access_token);\n      }\n      // Opcional: Podrías inicializar gapi aquí si necesitas más funcionalidades\n      // loadGapiClient(tokenResponse.access_token);\n    },\n    onError: (errorResponse) => {\n      console.error('Login Failed:', errorResponse);\n      setIsLoggedIn(false);\n      setError('Error al iniciar sesión con Google.');\n      if (onAuthFailure) {\n        onAuthFailure(errorResponse);\n      }\n    },\n    scope: SCOPES, // Solicitar permisos para Google Sheets\n    // flow: 'implicit', // o 'auth-code' si necesitas un refresh token en backend\n  });\n\n  // Opcional: Función para cargar el cliente gapi si es necesario para Sheets API\n  // async function loadGapiClient(accessToken) {\n  //   await new Promise((resolve) => gapi.load('client', resolve));\n  //   gapi.client.setToken({ access_token: accessToken });\n  //   await gapi.client.load('https://sheets.googleapis.com/$discovery/rest?version=v4');\n  //   console.log('GAPI client loaded for Sheets');\n  //   // Ahora puedes inicializar tu sheetsService que usa gapi.client.sheets\n  //   // sheetsService.init(gapi.client); // Ejemplo\n  // }\n\n  // Podrías añadir una función de logout si es necesario\n  const handleLogout = () => {\n      // Aquí implementarías la lógica de logout si usas gapi o limpias el estado\n      setIsLoggedIn(false);\n      // Notificar al padre si es necesario\n      console.log('User logged out');\n  };\n\n  return (\n    <div>\n      {!isLoggedIn ? (\n        <button\n          onClick={() => login()}\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n        >\n          Iniciar Sesión con Google\n        </button>\n      ) : (\n        <div>\n          <p className=\"text-green-600\">¡Conectado con Google!</p>\n          {/* Podrías añadir un botón de logout aquí */}\n          {/* <button onClick={handleLogout} className=\"...\">Logout</button> */}\n        </div>\n      )}\n      {error && <p className=\"text-red-500 mt-2\">{error}</p>}\n    </div>\n  );\n}\n\nexport default GoogleAuth;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,qBAAqB;AACpD;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,8CAA8C;AAE7D,SAASC,UAAUA,CAAC;EAAEC,aAAa;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAAE;EACtD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,KAAK,GAAGZ,cAAc,CAAC;IAC3Ba,SAAS,EAAE,MAAOC,aAAa,IAAK;MAClCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,aAAa,CAAC;MAC5CL,aAAa,CAAC,IAAI,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;MACd;MACA;MACA,IAAIN,aAAa,EAAE;QACjBA,aAAa,CAACS,aAAa,CAACG,YAAY,CAAC;MAC3C;MACA;MACA;IACF,CAAC;IACDC,OAAO,EAAGC,aAAa,IAAK;MAC1BJ,OAAO,CAACL,KAAK,CAAC,eAAe,EAAES,aAAa,CAAC;MAC7CV,aAAa,CAAC,KAAK,CAAC;MACpBE,QAAQ,CAAC,qCAAqC,CAAC;MAC/C,IAAIL,aAAa,EAAE;QACjBA,aAAa,CAACa,aAAa,CAAC;MAC9B;IACF,CAAC;IACDC,KAAK,EAAEjB,MAAM,CAAE;IACf;EACF,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMkB,YAAY,GAAGA,CAAA,KAAM;IACvB;IACAZ,aAAa,CAAC,KAAK,CAAC;IACpB;IACAM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAClC,CAAC;EAED,oBACEd,OAAA;IAAAoB,QAAA,GACG,CAACd,UAAU,gBACVN,OAAA;MACEqB,OAAO,EAAEA,CAAA,KAAMX,KAAK,CAAC,CAAE;MACvBY,SAAS,EAAC,sEAAsE;MAAAF,QAAA,EACjF;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAET1B,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAGsB,SAAS,EAAC,gBAAgB;QAAAF,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrD,CACN,EACAlB,KAAK,iBAAIR,OAAA;MAAGsB,SAAS,EAAC,mBAAmB;MAAAF,QAAA,EAAEZ;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACrB,EAAA,CAlEQH,UAAU;EAAA,QAIHJ,cAAc;AAAA;AAAA6B,EAAA,GAJrBzB,UAAU;AAoEnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}